set rtp+=~/.vim/bundle/vundle/
call vundle#begin()

" let vundle manage vundle
Plugin 'gmarik/vundle'

" list all plugins that you'd like to install here
Plugin 'rizzatti/dash.vim' "Dash.app support
Plugin 'terryma/vim-multiple-cursors' 
Plugin 'kien/ctrlp.vim' " fuzzy find files
Plugin 'scrooloose/nerdtree' " file drawer, open with :NERDTreeToggle
Plugin 'benmills/vimux'
Plugin 'tpope/vim-fugitive' " the ultimate git helper
Plugin 'tpope/vim-commentary' " comment/uncomment lines with gcc or gc in visual mode
Plugin 'tomtom/tcomment_vim' "provides easy to use, file-type sensible comments for Vim
Plugin 'godlygeek/tabular'
Plugin 'pbrisbin/vim-mkdir' "Automatically create any non-existent directories before writing the buffer
Plugin 'plasticboy/vim-markdown'
Plugin 'ervandew/supertab' "use <Tab> for all your insert completion needs (:help ins-completion).
Plugin 'scrooloose/syntastic' "syntax checking plugin for Vim.
Plugin 'christoomey/vim-tmux-navigator' "https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
Plugin 'tpope/vim-surround' " surround text with things

call vundle#end()
filetype plugin indent on

" Set leader to space bar
let mapleader = "\<Space>"

set nocompatible                  " Must come first because it changes other options.

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

"runtime macros/matchit.vim        " Load the matchit plugin.

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
set guifont=Monaco

" Syntastic Drupal coding standards
let g:syntastic_php_phpcs_args="--standard=Drupal --extensions=php,module,inc,install,test,profile,theme"

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
"set ruler                         " Show cursor position.

" Set cursorline colors
highlight CursorLine ctermbg=235

" Set color of number column on cursorline
highlight CursorLineNR ctermbg=235 ctermfg=white

" Better Undo History  http://shelldevel.net/post/112278835197/better-undo-history-in-vim
set undofile

set undodir=~/.vim/history

set undolevels=1000

set undoreload=10000

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

" UNCOMMENT TO USE
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" disable the folding for vim markdown
let g:vim_markdown_folding_disabled=1

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Map ctrl+d to toggle NERDTree 
map <C-d> :NERDTreeToggle<cr>

" Set NerdTree Window size
let NERDTreeWinSize = 50

"https://github.com/scrooloose/nerdtree/issues/162#issuecomment-107643011
nmap <silent> <Leader>t :call g:WorkaroundNERDTreeToggle()<CR>

function! g:WorkaroundNERDTreeToggle()
  try | NERDTreeToggle | catch | silent! NERDTree | endtry
endfunction

" T-Comment mapping
map <leader>c <c-_><c-_>

set autoindent
set smartindent
set clipboard=unnamed
:set mouse=a
if has("autocmd")
  " Drupal *.module and *.install files.
  augroup module
    autocmd BufRead,BufNewFile *.module set filetype=php
    autocmd BufRead,BufNewFile *.install set filetype=php
    autocmd BufRead,BufNewFile *.test set filetype=php
    autocmd BufRead,BufNewFile *.inc set filetype=php
    autocmd BufRead,BufNewFile *.profile set filetype=php
    autocmd BufRead,BufNewFile *.view set filetype=php
  augroup END
endif
syntax enable

