[core]
  editor = nvim
	excludesfile = ~/.gitignore
	quotepath = false
  pager = delta # Use the git-delta package for diffs
  fsmonitor = true
  untrackedCache = true
[interactive]
  diffFilter = delta --color-only
  singlekey = true # one-letter input with a single key in interactive commands without hitting enter
[blame]
  coloring = highlightRecent
  date = relative
[column]
  # Displays output in columns
  ui = auto
[color]
  ui = true
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "blame"]
  highlightRecent = black bold,1 year ago,white,1 month ago,default,7 days ago,blue
[color "branch"]
  current = magenta
  local = default
  remote = yellow
  upstream = green
  plain = blue
[color "diff"]
  meta = black bold
  frag = magenta
  context = white
  whitespace = yellow reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[push]
  default = current  # push only current branch by default
  autoSetupRemote = true  # easier to push new branches
  followTags = true  # push also tags
  gpgSign = false  # my remotes doesn't support sign pushes
[pull]
	rebase = true
[submodule]
  fetchJobs = 16
[fetch]
  prune = true
  pruneTags = true
  all = true
[help]
  autocorrect = prompt
[rerere]
  enabled = true
  autoupdate = true
[rebase]
  autoSquash = true
  autoStash = true
  updateRefs = true
[alias]
  br = branch
  ci = commit
  co = checkout
  datetag = !git tag `date "+%Y_%m_%d_%H%M"`
  df = diff
  # Show modified files in last commit.
  diffall = diff HEAD
  diffstaged = diff --staged
  nextrelease = log origin/dev ^origin/main --no-merges
  dl = "!git ll -1"
  # Show a diff last commit.
  dlc = diff --cached HEAD^
  filelog = log --oneline --no-merges --
  fl = log -t u
  init = init --template ~/.git_template
  # List oneline commits showing relative dates.
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  # List oneline commits showing dates.
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  lg = log -p
  # List commits showing changed files is invoked with git ll and looks like this.
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  logm = log --author="kepford" --decorate
  lol = log --graph --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lola = log --graph --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --all
  lolm = log --author="kepford" --decorate --pretty=oneline --abbrev-commit
  ls = ls-files
  # Copies today's commits by me on a branch.
  today = "!git log --since=6am --author="kepford" --decorate --abbrev-commit | grep -vwE \"(Author:|Date:)\" | xclip -sel c | xclip -selection clipboard -o | cat"
  sa = stash apply
  sl = stash list
  ss = stash save
  st = status
  # Commits on current branch. Assumes the branch was created from develop.
  thisbranch = log --no-merges dev..
  undolast = reset --soft Head^
  unstage = reset HEAD

[apply]
  whitespace = nowarn
[branch]
  autosetuprebase = always
  # List branch last committed first
  sort = -committerdate
[tag]
  sort = version:refname
[commit]
  template = ~/.gitmessage
  verbose = true
[init]
	templatedir = ~/.git_template
	defaultBranch = main
[log]
  abbrevCommit = true  # short commits
  graphColors = blue,yellow,cyan,magenta,green,red
[status]
  branch = true
  short = false # I like to see it all. I can get short with gs alias in bash
  showStash = true
  showUntrackedFiles = all  # show individual untracked files
[merge]
	tool = nvimdiff
  # (just 'diff3' if git version < 2.3)
  conflictstyle = zdiff3 # for git-delta
[mergetool]
	prompt = false
	keepBackup = true
[pager]
  branch = false  # no need to use pager for git branch
[diff]
  context = 3  # less context in diffs
  renames = copies  # detect copies as renames in diffs
  interHunkContext = 10  # merge near hunks in diffs
	tool = vimdiff
  colorMoved = default
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
[include]
    path = ~/.gitconfig_local
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[delta]
  navigate = true    # use n and N to move between diff sections
  side-by-side = true

  # delta detects terminal colors automatically; set one of these to disable auto-detection
  dark = true
  # light = true
[credential]
	helper = store

# URL shortcuts
[url "git@github.com:"]
    insteadOf = "gh:"

[url "git@github.com:kepford"]
    insteadOf = "kgh:"
