# Set PATH, CDPATH, EDITOR, etc.
export EDITOR="vim"

set -o vi

# Z
if [ $(uname) == "Darwin" ]; then
  . /usr/local/etc/profile.d/z.sh
fi

# Bash completion.
[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# S completion.
if [ -f $GOPATH/src/github.com/zquestz/s/autocomplete/s-completion.bash ]; then
    . $GOPATH/src/github.com/zquestz/s/autocomplete/s-completion.bash
fi

# Bash completion via homebrew.
if [ $(uname) == "Darwin" ]; then
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
fi

export PATH=~/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/usr/local/git/bin:/opt/local/bin

# PHP https://github.com/Homebrew/homebrew-php/wiki/Installing-Multiple-Versions
# PHP 5.6
# export PATH="$(brew --prefix homebrew/php/php71)/bin:$PATH"
# export PATH="/usr/local/opt/php@7.1/bin:$PATH"
# export PATH="/usr/local/opt/php@7.1/sbin:$PATH"
export PATH="/usr/local/opt/php@7.3/bin:$PATH"
export PATH="/usr/local/opt/php@7.3/sbin:$PATH"
export XDEBUG_CONFIG="idekey=PHPSTORM"

PATH="$PATH:$HOME/.composer/vendor/bin"

# Git completion
source ~/git-flow-completion.bash

# Go lang
export GOPATH=~/golang
export PATH=$PATH:$GOPATH/bin

# Rust / Cargo
export CARGOPATH=~/.cargo
export PATH=$PATH:$CARGOPATH/bin

# Diff-so-fancy
DSFPATH=~/bin/diff-so-fancy
export PATH=$PATH:$DSFPATH

# Terminus completion
source ~/bin/dotfiles/terminus/terminus-completion.bash

#Drupal Console completion
source "$HOME/.console/console.rc" 2>/dev/null

export PATH
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

# Add ssh keys to agent.
ssh-add -A 2>/dev/null;

# Python
if [[ $OSTYPE == 'darwin'* ]]; then
  alias python=/usr/local/bin/python3
  USER_BASE_PATH=$(python -m site --user-base)
  export PATH=$PATH:$USER_BASE_PATH/bin
fi


# Run 'nvm use' automatically every time there's
# a .nvmrc file in the directory. Also, revert to default
# version when entering a directory without .nvmrc
#
enter_directory() {
if [[ $PWD == $PREV_PWD ]]; then
    return
fi

PREV_PWD=$PWD
if [[ -f ".nvmrc" ]]; then
    nvm use
    NVM_DIRTY=true
elif [[ $NVM_DIRTY = true ]]; then
    nvm use default
    NVM_DIRTY=false
fi
}

export PROMPT_COMMAND=enter_directory
