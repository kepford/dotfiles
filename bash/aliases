# Command Enhancements 2010-09-28-1248

# Utility
alias reload='source ~/bin/dotfiles/bash/aliases'
alias ea='vim ~/bin/dotfiles/bash/aliases && reload' # Edit aliases
alias ee="vim ~/bin/dotfiles/bash/env"
alias es="vim ~/bin/dotfiles/ssh/config"

# Quicker cd
alias cg='cd /Library/Ruby/Gems/1.8/gems/'
function cr() {
 cd ~/repos/$*
}

#Bret Terpstra
#copy the working directory path
alias cpwd='pwd|tr -d "\n"|pbcopy'


# Common -- Some are from Damian Conway
alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
function cdc() {
    cd $1; ls
}
alias cls='clear; ls'
alias h='history'
#share history between terminal sessions
alias he="history -a" # export history
alias hi="history -n" # import history

alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir

# ls with grep
function lg() {
    ls | grep $1
}

function take() {
    mkdir -p "$1"
    cd "$1"
}

alias e='exit'
alias k9="killall -9"
function killnamed () {
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill
}
# recursively zips all files in a directory. Example: $zipr nameofdirectory
function zipr() {
  zip -r $1.zip $1
}

# zips every files in your current directory with the current name of each file and deletes the the original file.
# Thanks to Steven Frank for this. http://stevenf.tumblr.com/post/1200983113/this-terminal-command-will-turn-every-file-in-the
alias zipall='for item in *; do zip -m "${item}.zip" "${item}"; done'

# Finder
alias o='open . &'
alias ff='open -a Firefox'
alias chrome='open -a Google\ Chrome'
alias css='open -a CSSEdit'
alias coda='open -a Coda'
alias mamp='open -a MAMP'
alias f='open -a Path\ Finder ./'
#alias watch='~/scripts/watch.rb'


# General code

# From Chris Wanstrath
function pless() {
    pygmentize $1 | less -r
}

# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Mercurial hg
function new-hg() {
    ssh hg@example.com "hg init $1"
    hg clone ssh://hg@example.com/$1
}

# Git
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
# Commit pending changes and quote all args as message
function gg() {
    git commit -v -a -m "$*"
}
alias gco='git checkout'
alias gcob='git checkout -b'
alias gd='git diff'
alias gdm='git diff master'
function gdx() {
  git diff $1 $2 | gitx
}
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias ga-modified="git status | grep modified | cut -d':' -f2 | xargs git add"
alias eg='vim .git/config'
alias egg='vim ~/.gitconfig'

function glg() {
  git log --author="$1" --decorate
}

# Git clone from GitHub
function gch() {
  git clone git://github.com/$1/$2.git
}

# Setup a tracking branch from [remote] [branch_name]
# EXAMPLE gbt remote branch_name
function gbt() {
  git branch --track $2 $1/$2 && git checkout $2
}
# Quickly clobber a file and checkout
function grf() {
  rm $1
  git checkout $1
}
# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

#Git Flow
alias gf='git-flow'

# TDD / BDD
alias aa='autotest'
alias aaf='autotest -f' # Don't run all at start
alias aas="./script/autospec"

# Setup a tunnel
function haproxyssh() {
  ssh -L7997:127.0.0.1:7997 deploy@$1.com
}

# Syntax check Javascript
function jsc() {
  jsl -conf /etc/jsl/jsl.conf -process $1
}

function aiff2mp3() {
  lame -h -V 0 $1.aif $1.mp3
}
function wav2mp3() {
  lame -h -V 0 $1.wav $1.mp3
}


# XCode
# Analyze release build
alias sx="xcodebuild clean && ~/src/checker-0.146/scan-build -k -V xcodebuild"
# Analyze test build
alias sxt="xcodebuild -target Test clean && ~/src/checker-0.146/scan-build -k -V xcodebuild -target Test"
# Call with -target Foo
function sxx() {
  xcodebuild $* clean && ~/src/checker-0.146/scan-build -k -V xcodebuild $*
}

alias ox="open *.xcodeproj"

# Nginx
# sudo $(brew --prefix)/sbin/nginx -s stop
function nginx_stop() {
  sudo nginx -s stop
}
function nginx_start() {
  sudo /usr/local/sbin/nginx
}
function nginx_reload() {
  sudo nginx -s reload
}

# php-fpm
function php_stop() {
    ps ax | grep php-fpm | cut -d " " -f 1 | xargs sudo kill -9
}

# TaskPaper
function new-tp() {
    touch $1.taskpaper
    subl $1.taskpaper
}

# From http://github.com/suztomo/dotfiles
function rmf(){
    for file in $*
    do
        __rm_single_file $file
    done
}

function __rm_single_file(){
    if ! [ -d ~/.Trash/ ]
    then
        command /bin/mkdir ~/.Trash
    fi

    if ! [ $# -eq 1 ]
    then
        echo "__rm_single_file: 1 argument required but $# passed."
        exit
    fi

    if [ -e $1 ]
    then
        BASENAME=`basename $1`
        NAME=$BASENAME
        COUNT=0
        while [ -e ~/.Trash/$NAME ]
        do
            COUNT=$(($COUNT+1))
            NAME="$BASENAME.$COUNT"
        done

        command /bin/mv $1 ~/.Trash/$NAME
    else
        echo "No such file or directory: $file"
    fi
}

# Drupal
# Drupal Directories for my themes, modules, features, and drush make files.

alias themes='cd ~/Dropbox/drupal/themes/' #goto the themes folder
alias modules='cd ~/Dropbox/drupal/modules/' #goto the modules folder
alias builds='cd ~/Dropbox/drupal/builds/' #goto the builds folder
alias profiles='cd ~/Dropbox/drupal/profiles/' #goto the profiles folder
alias repos='cd ~/Dropbox/repos/' #goto the repos folder
alias sites='cd ~/Sites' #goto the profiles folder
alias twd='cd ~/Dropbox/currentprojects/theweeklydrop' #goto theweeklydrop folder

#Grunt
alias grunt='/usr/local/share/npm/bin/grunt'

# Get readable list of network IPs
alias ips="ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias flush="dscacheutil -flushcache" # Flush DNS cache
alias speedtest='wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip'

alias gzip="gzip -9n" # set strongest compression level as ‘default’ for gzip
alias ping="ping -c 5" # ping 5 times ‘by default’
alias ql="qlmanage -p 2>/dev/null" # preview a file using QuickLook

# Open Notational Velicity/Simplenote files in Textmate
alias notes='cd ~/Dropbox/Notational\ Data;subl .'
alias marked='open -a Marked'
alias vpn='sudo SystemStarter restart CiscoVPN'
alias hosts='sudo vim /private/etc/hosts'
alias dns='sudo vim /etc/resolv.dnsmasq.conf'
alias dnsconf='sudo vim /usr/local/etc/dnsmasq.conf'
alias dnsreload='sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist && sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist'

# Automator 
alias startcall="automator /Users/kepford/Dropbox/scripts/start_call.workflow  &> /dev/null"
alias stopcall="automator /Users/kepford/Dropbox/scripts/stop_call.workflow  &> /dev/null"

#Mediacurrent
alias mc='cd /Users/kepford/Dropbox/mediacurrent'
alias nba='cd /Users/kepford/Dropbox/mediacurrent/nba'
alias asco='cd /Users/kepford/Sites/asco/docroot'
